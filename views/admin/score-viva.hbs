<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Viva Scoring</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        .hidden {
            display: none;
        }
        .rotate-180 {
            transform: rotate(180deg);
        }
    </style>
</head>
<body class="bg-gray-100 p-8">
    <div class="container mx-auto bg-white shadow-lg rounded-lg p-6">
        <h1 class="text-3xl font-bold mb-6 text-center text-blue-600">
            Viva Scoring for {{vivaUid}} - {{networkName}}
        </h1>

        {{#if message}}
            <div class="bg-yellow-100 border border-yellow-400 text-yellow-700 px-4 py-3 rounded relative mb-4" role="alert">
                {{message}}
            </div>
        {{/if}}

        <div class="space-y-4">
            <h2 class="text-2xl font-semibold text-gray-700">Classes</h2>
            {{#each classes}}
                <div class="class-section bg-gray-50 border rounded p-4">
                    <div class="class-header flex justify-between items-center cursor-pointer" data-classname="{{this.className}}">
                        <span class="text-xl font-medium text-blue-700">{{this.className}}</span>
                        <svg class="w-6 h-6 text-blue-500 toggle-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                        </svg>
                    </div>
                    <div class="students-list hidden mt-3">
                        {{#each this.students}}
                            <div class="student-section bg-white border border-gray-200 rounded mb-2 p-3 hover:bg-blue-50 cursor-pointer">
                                <div class="flex justify-between items-center">
                                    <div>
                                        <span class="font-semibold text-gray-700">{{name}}</span>
                                        <span class="text-sm text-gray-500 ml-2">Roll: {{roll}}</span>
                                    </div>
                                    <div class="flex items-center">
                                        <span class="mr-2 student-total-score font-bold">Total: 0</span>
                                        <svg class="w-5 h-5 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                        </svg>
                                    </div>
                                </div>
                                <div class="student-details hidden mt-3 bg-gray-50 rounded p-3">
                                    <form class="scoring-form" data-student-id="{{roll}}">
                                        <input type="hidden" name="vivaUid" value="{{../../../vivaUid}}">
                                        <input type="hidden" name="networkName" value="{{../../../networkName}}">
                                        <input type="hidden" name="className" value="{{../className}}">
                                        <input type="hidden" name="studentName" value="{{name}}">
                                        <input type="hidden" name="studentRoll" value="{{roll}}">
                                        <input type="hidden" name="studentRegister" value="{{register}}">
                                        <input type="hidden" name="subjectName" value="{{subjectName}}">
                                        <input type="hidden" name="vivaName" value="{{vivaName}}">
                                        
                                        <div class="grid grid-cols-2 gap-4 mb-3">
                                            <div>
                                                <p><strong>Subject:</strong> {{subjectName}}</p>
                                                <p><strong>Viva Name:</strong> {{vivaName}}</p>
                                            </div>
                                            <div>
                                                <p><strong>Submitted At:</strong> {{formatDate submittedAt}}</p>
                                                <p><strong>Duration:</strong> {{duration}} minutes</p>
                                            </div>
                                        </div>
                                        
                                        <h3 class="text-lg font-semibold mt-4 mb-2 text-gray-700">Answers & Scoring</h3>
                                        <div class="space-y-4">
                                            {{#each answers}}
                                                <div class="bg-blue-50 p-4 rounded answer-container">
                                                    <div class="mb-2">
                                                        <p><strong>Question ID:</strong> {{this.questionId}}</p>
                                                        <p><strong>Answer:</strong> {{this.text}}</p>
                                                    </div>
                                                    <div class="flex items-center mt-3 bg-white p-2 rounded">
                                                        <label class="block text-gray-700 mr-3">Score:</label>
                                                        <input type="number" name="scores[{{@index}}][questionId]" value="{{this.questionId}}" hidden>
                                                        <input type="number" name="scores[{{@index}}][score]" min="0" max="10" value="0" 
                                                            class="score-input w-16 border rounded p-1 text-center" 
                                                            data-question-id="{{this.questionId}}">
                                                        <span class="ml-3 text-sm text-gray-500">(0-10)</span>
                                                    </div>
                                                    <div class="mt-2">
                                                        <label class="block text-gray-700 mb-1">Teacher Comment:</label>
                                                        <textarea name="scores[{{@index}}][comment]" class="w-full border rounded p-2" rows="2"></textarea>
                                                    </div>
                                                </div>
                                            {{else}}
                                                <p class="text-gray-500">No answers available for this student.</p>
                                            {{/each}}
                                        </div>
                                        
                                        <div class="flex justify-between mt-6 items-center">
                                            <div class="text-lg font-bold">
                                                Total Score: <span class="total-score">0</span>
                                            </div>
                                            <button type="submit" class="bg-green-500 text-white py-2 px-4 rounded hover:bg-green-600 submit-scores">
                                                Submit Scores
                                            </button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        {{/each}}
                    </div>
                </div>
            {{else}}
                <div class="bg-gray-50 border rounded p-4 text-center text-gray-500">
                    No classes found.
                </div>
            {{/each}}
        </div>
    </div>

    <script>
        $(document).ready(function() {
            // Toggle class students visibility
            $('.class-header').on('click', function() {
                $(this).next('.students-list').toggleClass('hidden');
                $(this).find('.toggle-icon').toggleClass('rotate-180');
            });

            // Toggle student details visibility
            $('.student-section').on('click', function(e) {
                if(!$(e.target).hasClass('score-input') && 
                   !$(e.target).hasClass('submit-scores') && 
                   !$(e.target).is('textarea') &&
                   !$(e.target).is('button')) {
                    $(this).find('.student-details').toggleClass('hidden');
                }
            });
            
            // Recalculate total score when any score input changes
            $('.score-input').on('input', function() {
                let form = $(this).closest('form');
                let total = 0;
                
                form.find('.score-input').each(function() {
                    let score = parseInt($(this).val()) || 0;
                    total += score;
                });
                
                form.find('.total-score').text(total);
                form.closest('.student-section').find('.student-total-score').text('Total: ' + total);
            });
            
            // Handle form submission
          // Handle form submission
$('.scoring-form').on('submit', function(e) {
    e.preventDefault();
    const form = $(this);
    const formData = $(this).serialize();
    const studentName = $(this).find('input[name="studentName"]').val();
    
    console.log('Form data being submitted:', formData);
    
    // Submit scores to server
    $.ajax({
        url: '/Admin/submit-scores',
        type: 'POST',
        data: formData,
        success: function(response) {
            console.log('Success response:', response);
            alert(`Scores for ${studentName} submitted successfully!`);
        },
        error: function(xhr, status, error) {
            console.error('Error details:', {
                status: xhr.status,
                statusText: xhr.statusText,
                responseText: xhr.responseText,
                error: error
            });
            alert('Error submitting scores. Please check console for details.');
        }
    });
});
            // Format date function
            function formatDate(dateString) {
                const date = new Date(dateString);
                return date.toLocaleString();
            }
            
            // Format any dates on the page
            $('.date-format').each(function() {
                const dateString = $(this).text();
                $(this).text(formatDate(dateString));
            });
        });
    </script>
</body>
</html>