document.addEventListener("DOMContentLoaded", function () {
    // Extract questions from the template
    const originalQuestions = [];
    
    {{#each response}}
        {{#each this.questions}}
            originalQuestions.push({
                question: "{{this.question}}",
                options: [{{#each this.options}}"{{this}}"{{#unless @last}},{{/unless}}{{/each}}],
                image: "{{this.image}}",
                originalIndex: {{@index}}
            });
        {{/each}}
    {{/each}}
    
    // Shuffle the questions
    const shuffledQuestions = shuffleArray([...originalQuestions]);
    
    // Generate HTML for shuffled questions
    const questionsContainer = document.getElementById("questionsContainer");
    
    shuffledQuestions.forEach((questionData, displayIndex) => {
        const questionDiv = document.createElement("div");
        questionDiv.className = "quiz";
        questionDiv.dataset.questionIndex = displayIndex;
        
        // Create question text
        const questionP = document.createElement("p");
        questionP.innerHTML = `<strong>Q${displayIndex + 1}. ${questionData.question}</strong>`;
        questionDiv.appendChild(questionP);
        
        // Add image if exists
        if (questionData.image) {
            const img = document.createElement("img");
            img.src = questionData.image;
            img.alt = "Question Image";
            questionDiv.appendChild(img);
        }
        
        // Create options
        const optionsList = document.createElement("ul");
        optionsList.className = "options";
        
        // Shuffle options
        const shuffledOptions = shuffleArray([...questionData.options]);
        
        // Create a mapping to track original option values
        const optionMapping = {};
        shuffledOptions.forEach((option, index) => {
            optionMapping[index] = option;
        });
        
        shuffledOptions.forEach((option, optionIndex) => {
            const optionLi = document.createElement("li");
            optionLi.dataset.value = option;
            
            const optionSpan = document.createElement("span");
            optionSpan.textContent = ["A.", "B.", "C.", "D."][optionIndex] + " ";
            
            optionLi.appendChild(optionSpan);
            optionLi.appendChild(document.createTextNode(option));
            optionsList.appendChild(optionLi);
            
            // Add click event to options
            optionLi.addEventListener("click", () => {
                optionsList.querySelectorAll("li").forEach(li => li.classList.remove("selected"));
                optionLi.classList.add("selected");
                hiddenInput.value = option;
            });
        });
        
        questionDiv.appendChild(optionsList);
        
        // Create hidden input for the answer (with original index)
        const hiddenInput = document.createElement("input");
        hiddenInput.type = "hidden";
        hiddenInput.name = `answers[${questionData.originalIndex}]`;
        hiddenInput.value = "";
        questionDiv.appendChild(hiddenInput);
        
        questionsContainer.appendChild(questionDiv);
    });
    
    // Create and add timer display
    const timerDisplay = document.createElement("div");
    timerDisplay.id = "timer-display";
    timerDisplay.style.cssText = `
        background-color: #3498db; 
        color: white; 
        font-weight: bold; 
        padding: 10px 20px; 
        border-radius: 10px; 
        margin-bottom: 20px; 
        text-align: center; 
        font-size: 1.2rem;
        position: sticky;
        top: 0;
        z-index: 100;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    `;
    document.querySelector(".quiz-container").insertBefore(timerDisplay, document.getElementById("questionsContainer"));
    
    // Get duration from student.duration (using Handlebars syntax properly)
    const duration = {{student.duration}} || 1800; // Default 30 minutes if not set
    
    // Timer function
    function startTimer(durationInSeconds) {
        let timer = durationInSeconds;
        const quizForm = document.getElementById("quizForm");
        
        // Update timer display function
        const updateTimer = () => {
            const minutes = Math.floor(timer / 60);
            const seconds = timer % 60;
            timerDisplay.textContent = `Time Remaining: ${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
            
            // Change color when time is running low
            if (timer <= 300) { // 5 minutes
                timerDisplay.style.backgroundColor = "#e74c3c";
            } else if (timer <= 600) { // 10 minutes
                timerDisplay.style.backgroundColor = "#f39c12";
            }
        };
        
        // Initialize timer display
        updateTimer();
        
        // Timer countdown interval
        const interval = setInterval(() => {
            timer--;
            updateTimer();
            
            if (timer <= 0) {
                clearInterval(interval);
                
                // Fill unanswered questions with "null"
                document.querySelectorAll(".quiz").forEach((quiz) => {
                    const hiddenInput = quiz.querySelector("input[type='hidden']");
                    if (!hiddenInput.value) {
                        hiddenInput.value = "null";
                    }
                });
                
                // Submit the form
                quizForm.submit();
            }
        }, 1000);
    }
    
    // Start the timer
    startTimer(duration);
    
    // Handle form submission
    document.getElementById("quizForm").addEventListener("submit", function(event) {
        let allAnswered = true;
        document.querySelectorAll(".quiz").forEach((quiz) => {
            if (!quiz.querySelector("input[type='hidden']").value) {
                allAnswered = false;
            }
        });

        if (!allAnswered) {
            event.preventDefault();
            alert("âš  Please answer all questions before submitting!");
        }
    });
    
    // Function to shuffle an array (Fisher-Yates algorithm)
    function shuffleArray(array) {
        for (let i = array.length - 1; i > 0; i--) {
            const j = Math.floor(Math.random() * (i + 1));
            [array[i], array[j]] = [array[j], array[i]];
        }
        return array;
    }
});